<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<title>HYUNDAI MnSOFT</title>

<link rel="stylesheet" type="text/css" href="../css/pages/common.css">			<!-- 공통 스타일 -->
<link rel="stylesheet" type="text/css" href="../BIX5/Assets/BIX5.css"/>			<!-- BIX5 스타일 -->  
<link rel="stylesheet" type="text/css" href="../BIX5/Assets/BIX5Dashboard.css"/>	<!-- BIX5 Dashboard 스타일 --> 

<script type="text/javascript" src="../js/jquery-1.12.4.min.js"></script>		<!-- jQeury 라이브러리 -->
<script type="text/javascript" src="../BIX5/JS/BIX5.js" ></script> 				<!-- BIX5 라이브러리 -->
<script type="text/javascript" src="../BIX5/LicenseKey/BIX5License.js"></script>	<!-- BIX5 라이선스 -->

<script type="text/javascript">
	// -----------------------차트 설정 시작-----------------------
	
	// BIX5Chart 를 생성합니다.
	// 파라메터 (순서대로)
	//  1. 차트의 id ( 임의로 지정하십시오. )
	//  2. 차트가 위치할 div 의 id (즉, 차트의 부모 div 의 id 입니다.)
	//  3. 차트 생성 시 필요한 환경 변수들의 묶음인 chartVars
	//  4. 차트의 가로 사이즈 (생략 가능, 생략 시 100%)
	//  5. 차트의 세로 사이즈 (생략 가능, 생략 시 100%)
	BIX5.chart.create("chart1", "chartHolder", "", "100%", "100%");
	
	// 스트링 형식으로 레이아웃 정의.
	var layoutStr =
					'<BIX5 backgroundColor="#FFFFFF" borderStyle="none">'
						+'<Options>'
							+'<Caption text="Annual Report"/>'
							+'<Legend useVisibleCheck="true"/>'
						+'</Options>'
						+'<Pie2DChart innerRadius="0.5" showDataTips="true" selectionMode="single">'
					/*
					Doughnut2D 차트 생성시에 필요한 Pie2DChart 정의합니다
					showDataTips : 데이터에 마우스를 가져갔을 때 나오는 Tip을 보이기/안보이기 속성입니다.
					innerRadius : PieChart 가운데에 빈 공간을 만듭니다. 유효값 0.1 ~ 0.9 0은 PieChart 1은 차트 사라짐
					*/
							+'<series>'
								+'<Pie2DSeries nameField="Month" field="Profit" startAngle="20" renderDirection="clockwise" labelPosition="inside" color="#ffffff">'
									+'<fills>'
										+'<SolidColor color="#20cbc2"/>'
										+'<SolidColor color="#074d81"/>'
										+'<SolidColor color="#40b2e6"/>'
									+'</fills>'
								/* Pie2DChart 정의 후 Pie2DSeries labelPosition="inside"정의합니다 */
									+'<showDataEffect>'
									/* 차트 생성시에 Effect를 주고 싶을 때 showDataEffect정의합니다 */
										+'<SeriesZoom duration="1000"/>'
					/*
					SeriesZoom 효과는 시리즈 데이터가 데이터로 표시될 때 특정 지점에서 점점 확대되어지며 나타나는 효과를 적용합니다
					- 공통속성 -
					elementOffset : effect를 지연시키는 시간을 지정합니다 default:20
					minimumElementDuration : 각 엘리먼트의 최소 지속 시간을 설정합니다 default:0
								 이 값보다 짧은 시간에 effect가 실행되지 않습니다
					offset : effect개시의 지연시간을 설정합니다 default:0
					perElementOffset : 각 엘리먼트의 개시 지연시간을 설정합니다
					- SeriesZoom속성 -
					relativeTo : 이펙트의 기준을 어디로 잡을지에 대한 속성입니다. 유효값 : chart, series
					horizontalFocus : relativeTo를 기준으로 수평선 방향의 기준을 정합니다. 유효값 : left, center, right
					verticalFocus : relativeTo를 기준으로 수직선 방향의 기준을 정합니다. 유효값 : top, middle, bottom
					*/
									+'</showDataEffect>'
								+'</Pie2DSeries>'
							+'</series>'
							+'<backgroundElements>'
								+'<CanvasElement>'
									+'<CanvasLabel text="2019" height="24" horizontalCenter="0" verticalCenter="-10" fontSize="19" color="#333333" backgroundAlpha="0"/>'
									+'<CanvasLabel text="Annual Report" height="24" horizontalCenter="0" verticalCenter="10" fontSize="14" color="#666666" backgroundAlpha="0"/>'
								+'</CanvasElement>'
							+'</backgroundElements>'
						+'</Pie2DChart>'
					+'</BIX5>';
	
	// 차트 데이터
	var chartData = [{"Month":"Jan", "Profit":900},
					{"Month":"Feb", "Profit":2400},
					{"Month":"Mar", "Profit":1900}];
	
	// BIX5.chart.calls 함수를 이용하여 차트의 준비가 끝나면 실행할 함수를 등록합니다.
	//
	// argument 1 - BIX5.chart.create시 설정한 차트 객체 아이디 값
	// argument 2 - 차트준비가 완료되면 실행할 함수 명(key)과 설정될 전달인자 값(value)
	// 
	// 아래 내용은 
	// 1. 차트 준비가 완료되면 첫 전달인자 값을 가진 차트 객체에 접근하여
	// 2. 두 번째 전달인자 값의 key 명으로 정의된 함수에 value값을 전달인자로 설정하여 실행합니다.
	BIX5.chart.calls("chart1", {
		"setLayout" : layoutStr,
		"setData" : chartData
	});
	// -----------------------차트 설정 끝 -----------------------
</script>
</head>

<body class="">
<div class="mBox1 h1">
	<div class="tit">
		<div class="ti">변화정보 상세현황</div>
		<div class="rt">
			<a href="###" class="iRefresh">새로고립</a>
			<a href="###" class="iSet2">세팅</a>
		</div>
	</div>
	<div class="con">
		<div class="co">
			<div id="chartHolder" style="height: 400px"></div>
		</div>
	</div>
</div>
</body>
</html>